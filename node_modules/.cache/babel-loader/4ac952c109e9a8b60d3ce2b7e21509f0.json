{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport reducers from '../reducers';\nimport createHistory from 'history/createBrowserHistory';\nvar history = createHistory();\nvar middlewares = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n  middlewares.push(logger);\n}\n\nvar store = createStore(reducers, compose(applyMiddleware.apply(void 0, middlewares), window.devToolsExtension ? window.devToolsExtension() : function (f) {\n  return f;\n})); // if (module && module.hot) {\n//   // Enable Webpack hot module replacement for reducers\n//   module.hot.accept('../reducers', () => {\n//     // eslint-disable-next-line global-require\n//     const nextRootReducer = require('../reducers/index').default;\n//     store.replaceReducer(nextRootReducer);\n//   });\n//   module.hot.accept();\n// }\n\nexport default store;","map":{"version":3,"sources":["/Users/harshit/johndoe/src/core/configureStore.js"],"names":["createStore","applyMiddleware","compose","thunk","logger","reducers","createHistory","history","middlewares","process","env","NODE_ENV","push","store","window","devToolsExtension","f"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,IAAMC,OAAO,GAAGD,aAAa,EAA7B;AAEA,IAAME,WAAW,GAAG,CAACL,KAAD,CAApB;;AACA,IAAIM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBR,MAAjB;AACD;;AAED,IAAMS,KAAK,GAAGb,WAAW,CACxBK,QADwB,EAEvBH,OAAO,CACND,eAAe,MAAf,SAAmBO,WAAnB,CADM,EAERM,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwD,UAAAC,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAFjD,CAFgB,CAAzB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeH,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport reducers from '../reducers';\nimport createHistory from 'history/createBrowserHistory';\nconst history = createHistory();\n\nconst middlewares = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(\n\treducers, \n\t\tcompose(\n\t\t\tapplyMiddleware(...middlewares),\n\twindow.devToolsExtension ? window.devToolsExtension() : f => f\n));\n\n// if (module && module.hot) {\n//   // Enable Webpack hot module replacement for reducers\n//   module.hot.accept('../reducers', () => {\n//     // eslint-disable-next-line global-require\n//     const nextRootReducer = require('../reducers/index').default;\n//     store.replaceReducer(nextRootReducer);\n//   });\n//   module.hot.accept();\n// }\n\nexport default store;"]},"metadata":{},"sourceType":"module"}